# HTTP 重定向到 HTTPS
# server1 {
#    listen 80;
#    server_name api.agfiy.com;

    # 重定向到HTTPS
#    return 301 https://$server_name$request_uri;

#    access_log /var/log/nginx/redirect.access.log main;
#}

server {
    listen 443 ssl http2;

    server_name api.agfiy.com ,lrkmapi.hexiny.com;

    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/hexiny.com.pem;
    ssl_certificate_key /etc/nginx/ssl/hexiny.com.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 安全头
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # 根路径代理
    location /go {
        # 将请求转发到upstream定义的服务器组
        proxy_pass http://backend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 启用缓存
        proxy_cache proxy_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

        # 健康检查
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
    }

    # API路径代理
    location /api/ {
        proxy_pass http://backend_servers;

        # API特殊配置
        proxy_set_header X-API-Version 1.0;
        proxy_read_timeout 60s;

        # 禁用缓存
        proxy_cache off;
    }

    # 静态资源代理到专门的服务器组
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
        proxy_pass http://static_servers;
        proxy_cache proxy_cache;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 5m;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 状态监控页面
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 192.168.1.0/24;  # 内网访问
        deny all;
    }

    # 健康检查端点
#    location /health {
#        access_log off;
#        return 200 "healthy\n";
#        add_header Content-Type text/plain;
#    }

    # 错误页面
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}


# HTTPS 主服务器
server {
   # listen 443 ssl http2;
     listen 80;
     server_name api.agfiy.com, lrkmapi.hexiny.com;

    # SSL证书配置
 #   ssl_certificate /etc/nginx/ssl/hexiny.com.pem;
 #   ssl_certificate_key /etc/nginx/ssl/hexiny.com.key;

  #  ssl_protocols TLSv1.2 TLSv1.3;
  #  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  #  ssl_prefer_server_ciphers off;
  #  ssl_session_cache shared:SSL:10m;
  #  ssl_session_timeout 10m;

    # 安全头
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # 根路径代理
    location /go {
        # 将请求转发到upstream定义的服务器组
        proxy_pass http://backend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 启用缓存
        proxy_cache proxy_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

        # 健康检查
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
    }

    # API路径代理
    location /api/ {
        proxy_pass http://backend_servers;

        # API特殊配置
        proxy_set_header X-API-Version 1.0;
        proxy_read_timeout 60s;

        # 禁用缓存
        proxy_cache off;
    }

    # 静态资源代理到专门的服务器组
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
        proxy_pass http://static_servers;
        proxy_cache proxy_cache;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 5m;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 状态监控页面
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 192.168.1.0/24;  # 内网访问
        deny all;
    }

    # 健康检查端点
#    location /health {
#        access_log off;
#        return 200 "healthy\n";
#        add_header Content-Type text/plain;
#    }

    # 错误页面
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

## 备份服务器（当主服务器组全部宕机时启用）
#server1 {
#    listen 443 ssl http2;
#    server_name backup.example.com;
#
#    ssl_certificate /etc/nginx/ssl/server1.crt;
#    ssl_certificate_key /etc/nginx/ssl/server1.key;
#
#    location / {
#        proxy_pass http://backup_servers;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#    }
#}